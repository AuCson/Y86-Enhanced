#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QFileDialog>
#include <string>
#include <cstdio>

void MainWindow::load_binary_file(){
    QString filename = QFileDialog::getOpenFileName(this);
    char buf[1000];
    strcpy(buf,filename.toStdString().c_str());
    FILE* fp = fopen(buf,"rb");
    if(!fp)
        return;

    //add file to vnode_list
    Vnode* vnode = new Vnode();
    strcpy(vnode->filename,filename.toStdString().c_str());

    while(fread(&vnode->file_content[vnode->filesize],sizeof(unsigned char),1,fp)){
        vnode->filesize++;
        if(vnode->filesize == 2000)
            break;
    }
    vnode->filetype = Vnode::BIN;
    kernel->vnode_list.push_back(vnode);
}

void MainWindow::load_ascii_file(){
    QString filename = QFileDialog::getOpenFileName(this);
    char buf[1000];
    strcpy(buf,filename.toStdString().c_str());
    FILE* fp = fopen(buf,"rb");
    if(!fp)
        return;

    //add file to vnode_list
    Vnode* vnode = new Vnode();
    strcpy(vnode->filename,filename.toStdString().c_str());

    while(fread(&vnode->file_content[vnode->filesize],sizeof(unsigned char),1,fp)){
        vnode->filesize++;
        if(vnode->filesize == 2000)
            break;
    }
    vnode->filetype = Vnode::ASCII;
    kernel->vnode_list.push_back(vnode);
}

void MainWindow::refresh_file_list(){
    ui->list_file->clear();
    for(auto i = kernel->vnode_list.begin();i!=kernel->vnode_list.end();++i){
        ui->list_file->addItem(QString((*i)->filename));
    }
    connect(ui->list_file,SIGNAL(itemClicked(QListWidgetItem*),this,SLOT(load_file_info(QListWidgetItem)))
}

void MainWindow::stdin_readline(QString cmd){
    Vnode* node = kernel->vnode_list[0];
    std::string cmd_std = cmd.toStdString();
    for(int i =0;i<cmd_std.size();++i){
        if(node->filesize >= 2000)
            break;
        node->file_content[node->filesize++] = cmd_std[i];
    }
    return;
}

void MainWindow::load_file_info(QListWidgetItem *item){
    std::string filename = item->text().toStdString();
    for(auto &i:kernel->vnode_list){
        if(!strcmp(filename.c_str(),i->filename)){
            Vnode* vnode = *i;
            ui->l_filename->setText(vnode->filename);
            ui->l_file_size->setText(QString::number(vnode->filesize));
            ui->l_f
        }
    }
}

